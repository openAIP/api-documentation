openapi: 3.0.3
info:
    description: |
        openAIP - Worldwide Aviation Database API

        The API offers various endpoints for each type of content available. Used format is GeoJSON. Each successful response contains a [GeoJSON feature collection](https://tools.ietf.org/html/rfc7946#page-12).

        Due to technical reasons, the API returns a paginated result set. For each result set returned from an endpoint, the maximum number of items returned may also differ and it's currently not possible to set a custom limit.
        The result set provides links to easily navigate through the paginated result set. Always use this links to navigate through the result set, don't try to guess and construct your own URIs!

        The API is case-sensitive and by default, every parameter value is lowercase or camelCase!
        Refer to the parameters definition section in the document below.

        To read the documentation of the production API, please change the YAML definition to "api.yaml" in the box above.
    version: '2.0'
    title: openAIP API - Staging
    contact:
        email: webmaster@openaip.net
    license:
        name: properietary
        url: 'https://staging.openaip.net/license'
tags:
    -   name: Status
        description: Endpoints that provide backend API status information.
    -   name: Airports
        description: Endpoints to interact with airports.
    -   name: Airspaces
        description: Endpoints to interact with airspaces.
    -   name: Hotspots
        description: Endpoints to interact with hotspots.
    -   name: Navaids
        description: Endpoints to interact with navaids.
servers:
    -   url: "https://staging.api.openaip.net/api/v2"
        description: Staging API endpoint for testing.
components:
    parameters:
        id:
            name: id
            in: path
            description: Queries the database for a document with the specific 'id' value.
            required: true
            schema:
                type: string
        country:
            name: country
            in: query
            description: A lowercase country ISO 3166-1 alpha-2 code, e.g. 'de'.
            required: false
            schema:
                type: array
                items:
                    type: string
                    pattern: '^[a-z]{2}$'
        page:
            name: page
            in: query
            description: A specific page in the paginated result set. If not set, the API will always return the first page.
            required: false
            schema:
                type: integer
        apiKey:
            name: apiKey
            in: query
            description: Your personal API key. Each user can create an API key on it's profile page.
            required: true
            schema:
                type: string
    responses:
        400:
            description: Bad request.
            content:
                'application/json':
                    schema:
                        type: object
                        properties:
                            message:
                                description: The error message.
                                type: string
                            code:
                                description: The error code.
                                type: integer
                        example:
                            message: Bad request
                            code: 404
        401:
            description: Authorization information is missing or invalid.
            content:
                'application/json':
                    schema:
                        type: object
                        properties:
                            message:
                                description: The error message.
                                type: string
                            code:
                                description: The error code.
                                type: integer
                        example:
                            message: Authorization information is missing or invalid
                            code: 401
        404:
            description: Requested resource was not found.
            content:
                'application/json':
                    schema:
                        type: object
                        properties:
                            message:
                                description: The error message.
                                type: string
                            code:
                                description: The error code.
                                type: integer
                        example:
                            message: Requested resource was not found
                            code: 404
        503:
            description: Unexpected error.
            content:
                'application/json':
                    schema:
                        type: object
                        properties:
                            message:
                                description: The error message.
                                type: string
                            code:
                                description: The error code.
                                type: integer
                        example:
                            message: Internal server error
                            code: 503

paths:
    # health checks
    /healthz:
        get:
            tags:
                - Status
            summary: check API health
            description: Check API health.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
            responses:
                200:
                    description: API is in a healthy state.
                503:
                    description: API unhealthy, i.e. not available.
    # airports
    /airports:
        get:
            tags:
                - Airports
            summary: Search airports
            description: Search database for airports based on filter criteria. Complete schema available at [](https://staging.api.openaip.net/api/v2/schema/airport/featureCollection.json).
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
                # page param
                -   $ref: '#/components/parameters/page'
                # country param
                -   $ref: '#/components/parameters/country'
                # type param
                -   name: type
                    in: query
                    description: The type of an airport. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - apt
                                - gld
                                - afCiv
                                - afWater
                                - intlApt
                                - heliMil
                                - adMil
                                - ulm
                                - heliCiv
                                - adClosed
                                - aptIfr
                                - strip
                                - agriStrip
                                - alti
                                - artificial
                # icaoCode param
                -   name: icaoCode
                    in: query
                    description: Search for the airport's ICAO code.
                    required: false
                    schema:
                        type: string
                        pattern: '^[A-Za-z0-9]{4}$'
                # iataCode param
                -   name: iataCode
                    in: query
                    description: Search for the airport's IATA code.
                    required: false
                    schema:
                        type: string
                        pattern: '^[A-Za-z0-9]{3}$'
                # private param
                -   name: private
                    in: query
                    description: Whether the airport is privately owned or not.
                    required: false
                    schema:
                        type: boolean
                # ppr param
                -   name: ppr
                    in: query
                    description: |
                        Whether approaching aircrafts require a permission to land on this particular airport or not. Usually a so called 'prior permission request' should be done by phone but the required permission can also be requested in-flight using radio communication.
                    required: false
                    schema:
                        type: boolean
                # skydiveActivity param
                -   name: skydiveActivity
                    in: query
                    description: Whether skydive activities take place on this airport or not.
                    required: false
                    schema:
                        type: boolean
                # trafficType param
                -   name: trafficType
                    in: query
                    description: The traffic types allowed for this airport.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - vfr
                                - ifr
                # operations param
                -   name: operations
                    in: query
                    description: The current airport's operational status.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - active
                                - tempClosed
                                - closed
                # fuelType param
                -   name: fuelType
                    in: query
                    description: The available fuel types on this airport.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - super
                                - avgas
                                - avgasUl96
                                - jetA
                                - jetA1
                                - jetB
                                - diesel
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/airport/featureCollection.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'
    /airports/countries:
        get:
            tags:
                - Airspaces
            summary: A list of used countries in this dataset.
            description: A list of used countries in this dataset. Complete schema available at https://api.openaip.net/api/v2/schema/availableCountries.json.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/availableCountries.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'                        
    # airspaces
    /airspaces:
        get:
            tags:
                - Airspaces
            summary: Search airspaces
            description: Search database for airspaces based on filter criteria. Complete schema available at https://staging.api.openaip.net/api/v2/schema/airspace/featureCollection.json.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
                # page param
                -   $ref: '#/components/parameters/page'
                # country param
                -   $ref: '#/components/parameters/country'
                # type param
                -   name: type
                    in: query
                    description: The type of an airspace. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - other
                                - restricted
                                - danger
                                - prohibited
                                - ctr
                                - tmz
                                - rmz
                                - tma
                                - tra
                                - tsa
                                - fir
                                - uir
                                - adiz
                                - atz
                                - matz
                                - awy
                                - mtr
                                - alert
                                - warning
                                - protected
                                - htz
                                - sector
                                - trp
                # icaoClass param
                -   name: icaoClass
                    in: query
                    description: The ICAO class of an airspace. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - a
                                - b
                                - c
                                - d
                                - e
                                - f
                                - g
                                - sua
                # intention param
                -   name: intention
                    in: query
                    description: The intention of an airspace. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - none
                                - acrobatics
                                - gliding
                                - parachuting
                # onRequest param
                -   name: onRequest
                    in: query
                    description: Whether in-flight aircrafts can request the activation of this airspace or not.
                    required: false
                    schema:
                        type: boolean
                # byNotam param
                -   name: byNotam
                    in: query
                    description: If true, airspace is related to a NOTAM.
                    required: false
                    schema:
                        type: boolean
                # onDemand param
                -   name: onDemand
                    in: query
                    description:  Indicates if the airspace can be activated/deactivated by an authority if required.
                    required: false
                    schema:
                        type: boolean
                # specialAgreement param
                -   name: specialAgreement
                    in: query
                    description:  |
                        Indicates whether this airspace is related to a special agreement or not. Normally, airspaces
                        are not based on a "special agreement" but there may be e.g. airspaces that may only be used by
                        members of a certain club or if they personally signed a letter of agreement.
                    required: false
                    schema:
                        type: boolean
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/airspace/featureCollection.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'
    /airspaces/countries:
        get:
            tags:
                - Airspaces
            summary: A list of used countries in this dataset.
            description: A list of used countries in this dataset. Complete schema available at https://api.openaip.net/api/v2/schema/availableCountries.json.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/availableCountries.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'                        
    # hotspots
    /hotspots:
        get:
            tags:
                - Hotspots
            summary: Search hotspots
            description: Search database for hotspots based on filter criteria. Complete schema available at https://staging.api.openaip.net/api/v2/schema/hotspot/featureCollection.json.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
                # page param
                -   $ref: '#/components/parameters/page'
                # country param
                -   $ref: '#/components/parameters/country'
                # type param
                -   name: type
                    in: query
                    description: The type of a hotspot. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - natural
                                - artificial
                # reliability param
                -   name: reliability
                    in: query
                    description: The reliability of a hotspot. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - poor
                                - fair
                                - high
                                - veryHigh
                # occurrence param
                -   name: occurrence
                    in: query
                    description: The interval in which a hotspot occurs. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - irregular
                                - scheduled
                                - constant
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/hotspot/featureCollection.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'
    /hotspots/countries:
        get:
            tags:
                - Hotspots
            summary: A list of used countries in this dataset.
            description: A list of used countries in this dataset. Complete schema available at https://api.openaip.net/api/v2/schema/availableCountries.json.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/availableCountries.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'                        
    # navaids
    /navaids:
        get:
            tags:
                - Navaids
            summary: Search navaids
            description: Search database for navaids based on filter criteria. Complete schema available at https://staging.api.openaip.net/api/v2/schema/navaid/featureCollection.json.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
                # page param
                -   $ref: '#/components/parameters/page'
                # country param
                -   $ref: '#/components/parameters/country'
                # identifier param
                -   name: identifier
                    in: query
                    description: Search for the navaid identifier.
                    required: false
                    schema:
                        type: string
                # type param
                -   name: type
                    in: query
                    description: The type of a navaid. Multiple comma separated values are allowed.
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
                            enum:
                                - dme
                                - tacan
                                - ndb
                                - vor
                                - vorDme
                                - vortac
                                - dvor
                                - dvorDme
                                - dvortac
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/navaid/featureCollection.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'
    /navaids/countries:
        get:
            tags:
                - Navaids
            summary: A list of used countries in this dataset.
            description: A list of used countries in this dataset. Complete schema available at https://api.openaip.net/api/v2/schema/availableCountries.json.
            parameters:
                # apiKey param
                -   $ref: '#/components/parameters/apiKey'
            responses:
                200:
                    content:
                        application/vnd.geo+json:
                            schema:
                                $ref: 'https://staging.api.openaip.net/api/v2/schema/availableCountries.json'
                400:
                    $ref: '#/components/responses/400'
                401:
                    $ref: '#/components/responses/401'
                404:
                    $ref: '#/components/responses/404'
                503:
                    $ref: '#/components/responses/503'                                    
